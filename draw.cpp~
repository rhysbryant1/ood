#include <window.h>
#include <draw.h>


class Command: public Instruction {
	protected:
		static float value;
	public:
		void Command();					// Default Constructor
		void Command(int input);		// Constructor
		void ~Command();				// Destructor
		virtual void draw(float);		// Virtual draw
}

class Left: public Command{
	public:
		void Left();
		void ~Left();
		
	void Left:: draw(){
	/* Draw function for Left instruction*/
	
	
	};
};


class Right: public Command{
	public:
		void Right();
		void ~Right();
		
	void Right:: draw(){
	/* Draw function for the Right instruction*/
	
	
	
	};
};


class Forward: public Command{
	public:
		void Forawrd();
		void ~Forawrd();
		
	void Foward:: draw(){
	/* Draw function for the Forward instruction*/
	
	
	};
};

class Jump: public Command{
	public:
		void Forward();
		void ~Forward();
		
	void Forward:: draw(){
	/* Draw function for the Jump instruction */
	
	
	};
};


class Repeat: public Command{


};

